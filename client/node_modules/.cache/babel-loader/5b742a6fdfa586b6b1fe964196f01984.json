{"ast":null,"code":"/*\r\nconst users? groupMembers?  = [\r\n {\r\n     name: \"kt\",\r\n     color: \"blue\",\r\n }\r\n]\r\nconst tasks = [\r\n    {\r\n        id: \"0\",\r\n        dueDate: \"Wednesday\",\r\n        info: \"Do the thing\"\r\n    }\r\n]\r\n\r\n*/\n//create 'containers'\nlet calArr = [];\nlet updatedCalArr = [];\nlet checkArr = [];\n\nfunction Calendar(name, dueDate) {\n  this.name = name;\n  this.dueDate = dueDate;\n}\n\n_c = Calendar;\nlet studentArr = [\"Alex\", \"Anthony\", \"Bowen\", \"Dustin\", \"Ethan\", \"Katie\", \"Shawn\", \"Steve\", \"Taylor\", \"Trevor\", \"Rison\", \"Solomon\"]; //create student list box\n\nlet studentList = document.querySelector(\".student-list\");\n\nfor (let i = 0; i < studentArr.length; i++) {\n  let studentPill = document.createElement(\"a\");\n  studentPill.draggable = \"true\";\n  studentPill.setAttribute(\"ondragstart\", \"drag(event)\");\n  studentPill.id = `drag${i}`;\n  studentPill.classList.add('pill'); //if students become users then instead of random...\n\n  let bgColor = Math.floor(Math.random() * 16777215).toString(16);\n  studentPill.style.backgroundColor = `#${bgColor}`;\n  studentPill.classList.add(`${studentArr[i]}`);\n  studentPill.innerHTML = `${studentArr[i]}`;\n  studentList.appendChild(studentPill);\n} // drag and drop functions\n\n\nfunction allowDrop(e) {\n  e.preventDefault();\n}\n\nfunction drag(e) {\n  e.dataTransfer.setData(\"text\", e.target.id);\n  e.dataTransfer.setData(\"name\", e.target.text);\n}\n\nfunction drop(e) {\n  e.preventDefault();\n  pillDrop(e);\n} //place pill\n\n\nlet pillDrop = e => {\n  if (e.target.innerHTML === \"\" || e.target.tagName === \"DIV\") {\n    let data = e.dataTransfer.getData(\"text\");\n    let student = e.dataTransfer.getData(\"name\");\n    e.target.appendChild(document.getElementById(data));\n    let slot = e.target.id;\n    console.log(slot);\n    let cal = `${student}Calendar`;\n    cal = new Calendar(student, slot);\n\n    if (e.target.tagName !== \"DIV\") {\n      calArr.push(cal);\n    } else {\n      calArr.pop(cal);\n    }\n\n    calendarUpload();\n    e.target.tagName !== \"DIV\" ? printSchedule(slot, student) : printRetraction();\n  }\n}; //create schedule message\n\n\nfunction printSchedule(slot, student) {\n  let task;\n  let dueDate;\n  message = document.querySelector('#message');\n  /*\r\n  `${student} will take ${task[?].id} due at ${task[?].dueDate}`\r\n  \r\n  */\n\n  switch (slot) {\n    case \"task-1\":\n      task = \"Task 1\";\n      dueDate = \"Wednesday\";\n      break;\n\n    case \"task-2\":\n      task = \"Task 2\";\n      dueDate = \"Wednesday\";\n      break;\n\n    case \"task-3\":\n      task = \"Task 3\";\n      dueDate = \"Thursday\";\n      break;\n\n    case \"task-4\":\n      task = \"Task 4\";\n      dueDate = \"Friday\";\n      break;\n\n    default:\n      break;\n  }\n\n  message.innerHTML = `${student} will take ${task} due at ${dueDate}`;\n}\n\nlet printRetraction = () => {\n  message = document.querySelector('#message');\n  message.innerHTML = \"no, they won't.\";\n}; //file upload/download\n\n\nconst calendarDownload = event => {\n  fetch('../files/calendar.text').then(response => response.text()).then(data => {\n    setCalendar(data);\n    calArr = updatedCalArr;\n  });\n};\n\nconst calendarUpload = () => {\n  calArr = updatedCalArr;\n  fetch('/post', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(calArr)\n  });\n};\n\nconst resetCalendar = () => {\n  calArr = updatedCalArr;\n  fetch('/clear', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\n\nlet resetBtn = document.querySelector(\"#reset\");\nresetBtn.addEventListener('click', () => {\n  resetCalendar();\n  location.reload();\n});\n\nlet setCalendar = data => {\n  updatedCalArr = JSON.parse(data);\n\n  for (let i = 0; i < updatedCalArr.length; i++) {\n    let studentName = document.querySelector(`.${updatedCalArr[i].name}`);\n    let timeSlot = document.querySelector(`#${updatedCalArr[i].dueDate}`);\n    console.log(updatedCalArr);\n    timeSlot.appendChild(studentName);\n  }\n};\n\nconst init = () => {\n  calendarDownload();\n};\n\ninit();\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/Groupwork/gwScript.js"],"names":["calArr","updatedCalArr","checkArr","Calendar","name","dueDate","studentArr","studentList","document","querySelector","i","length","studentPill","createElement","draggable","setAttribute","id","classList","add","bgColor","Math","floor","random","toString","style","backgroundColor","innerHTML","appendChild","allowDrop","e","preventDefault","drag","dataTransfer","setData","target","text","drop","pillDrop","tagName","data","getData","student","getElementById","slot","console","log","cal","push","pop","calendarUpload","printSchedule","printRetraction","task","message","calendarDownload","event","fetch","then","response","setCalendar","method","headers","body","JSON","stringify","resetCalendar","resetBtn","addEventListener","location","reload","parse","studentName","timeSlot","init"],"mappings":"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","sourcesContent":["/*\r\nconst users? groupMembers?  = [\r\n {\r\n     name: \"kt\",\r\n     color: \"blue\",\r\n }\r\n]\r\nconst tasks = [\r\n    {\r\n        id: \"0\",\r\n        dueDate: \"Wednesday\",\r\n        info: \"Do the thing\"\r\n    }\r\n]\r\n\r\n*/\r\n\r\n//create 'containers'\r\n\r\nlet calArr = [];\r\nlet updatedCalArr = [];\r\nlet checkArr = [];\r\n\r\nfunction Calendar(name, dueDate) {\r\n  this.name = name;\r\n  this.dueDate = dueDate;\r\n}\r\n\r\nlet studentArr = [\"Alex\", \"Anthony\", \"Bowen\", \"Dustin\", \"Ethan\", \"Katie\", \"Shawn\", \"Steve\", \"Taylor\", \"Trevor\", \"Rison\", \"Solomon\"];\r\n\r\n\r\n//create student list box\r\nlet studentList = document.querySelector(\".student-list\")\r\n\r\nfor (let i = 0; i < studentArr.length; i++) {\r\n  let studentPill = document.createElement(\"a\")\r\n  studentPill.draggable = \"true\";\r\n  studentPill.setAttribute(\"ondragstart\", \"drag(event)\");\r\n  studentPill.id = `drag${i}`\r\n  studentPill.classList.add('pill');\r\n  //if students become users then instead of random...\r\n  let bgColor = Math.floor(Math.random()*16777215).toString(16)\r\n  studentPill.style.backgroundColor = `#${bgColor}`;\r\n  studentPill.classList.add(`${studentArr[i]}`)\r\n  studentPill.innerHTML = `${studentArr[i]}`\r\n  studentList.appendChild(studentPill)\r\n}\r\n\r\n\r\n// drag and drop functions\r\nfunction allowDrop(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction drag(e) {\r\n  e.dataTransfer.setData(\"text\", e.target.id);\r\n  e.dataTransfer.setData(\"name\", e.target.text);\r\n}\r\n\r\nfunction drop(e) {\r\n  e.preventDefault();\r\n  pillDrop(e);\r\n}\r\n\r\n\r\n//place pill\r\nlet pillDrop = (e) => {\r\n  if (e.target.innerHTML === \"\" || e.target.tagName === \"DIV\") {\r\n    let data = e.dataTransfer.getData(\"text\");\r\n    let student = e.dataTransfer.getData(\"name\");\r\n    e.target.appendChild(document.getElementById(data));\r\n    let slot = e.target.id\r\n    console.log(slot)\r\n    let cal = `${student}Calendar`\r\n    cal = new Calendar(student, slot)\r\n    if (e.target.tagName !== \"DIV\") {\r\n      calArr.push(cal)}\r\n      else {\r\n        calArr.pop(cal)\r\n      }\r\n    calendarUpload();\r\n    (e.target.tagName !== \"DIV\")? printSchedule(slot, student):printRetraction()\r\n  }\r\n}\r\n\r\n//create schedule message\r\n\r\nfunction printSchedule(slot, student) {\r\n  let task\r\n  let dueDate\r\n  message = document.querySelector('#message')\r\n  /*\r\n  `${student} will take ${task[?].id} due at ${task[?].dueDate}`\r\n  \r\n  */\r\n\r\n  switch (slot) {\r\n    case \"task-1\": \r\n      task = \"Task 1\";\r\n      dueDate = \"Wednesday\";\r\n      break;\r\n    case \"task-2\":\r\n      task = \"Task 2\";\r\n      dueDate = \"Wednesday\";\r\n      break;\r\n    case \"task-3\":\r\n      task = \"Task 3\";\r\n      dueDate = \"Thursday\";\r\n      break;\r\n    case \"task-4\":\r\n      task = \"Task 4\";\r\n      dueDate = \"Friday\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  message.innerHTML = `${student} will take ${task} due at ${dueDate}`\r\n}\r\n\r\nlet printRetraction = () => {\r\n  message = document.querySelector('#message')\r\n  message.innerHTML = \"no, they won't.\"\r\n}\r\n\r\n\r\n//file upload/download\r\n\r\nconst calendarDownload = event => {\r\n  fetch('../files/calendar.text')\r\n    .then(response => response.text())\r\n    .then(data => {\r\n      setCalendar(data)\r\n      calArr = updatedCalArr\r\n    }\r\n    )\r\n}\r\n\r\nconst calendarUpload = () => {\r\n  calArr = updatedCalArr\r\n  fetch('/post', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(calArr)\r\n  })\r\n}\r\n\r\n\r\n\r\nconst resetCalendar = () => {\r\n  calArr = updatedCalArr\r\n  fetch('/clear', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nlet resetBtn = document.querySelector(\"#reset\");\r\nresetBtn.addEventListener('click', () => {\r\n  resetCalendar()\r\n  location.reload();\r\n})\r\n\r\nlet setCalendar = (data) => {\r\n  updatedCalArr = (JSON.parse(data));\r\n\r\n  for (let i = 0; i < updatedCalArr.length; i++) {\r\n    let studentName = document.querySelector(`.${updatedCalArr[i].name}`)\r\n    let timeSlot = document.querySelector(`#${updatedCalArr[i].dueDate}`)\r\n    console.log(updatedCalArr)\r\n    timeSlot.appendChild(studentName)\r\n  }\r\n}\r\nconst init = () => {\r\n  calendarDownload()\r\n}\r\n\r\ninit();\r\n"]},"metadata":{},"sourceType":"module"}