{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Git\\\\Array\\\\projects\\\\arrayapp\\\\client\\\\src\\\\components\\\\User\\\\UserSignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport './User.css';\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUsers } from \"../../state/usersSlice\";\nimport { postUser } from \"../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserSignUp() {\n  _s();\n\n  const dispatch = useDispatch();\n  const users = useSelector(selectUsers);\n  const [username, setUsername] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  const checkAuth = e => {\n    e.preventDefault();\n    if (username === \"\") return alert(\"username cannot be empty\");\n    if (password1 === \"\") return alert(\"create password cannot be empty\");\n    if (password2 === \"\") return alert(\"confirm password cannot be empty\");\n    let user = users.find(e => e.username === username);\n    if (user) return alert(\"username already exists\");\n    if (password1 !== password2) alert(\"your passwords don't match\");\n    dispatch(postUser({\n      username: username,\n      password: password1\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        checkAuth(e);\n      },\n      children: [\"Sign Up\", /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"username-input\",\n            id: \"inlineFormInputGroupUsername\",\n            placeholder: \"create username\",\n            value: username,\n            onChange: e => {\n              setUsername(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"password-input\",\n          type: \"password\",\n          placeholder: \"create password\",\n          value: password1,\n          onChange: e => {\n            setPassword1(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"password-input\",\n          type: \"password\",\n          placeholder: \"confirm password\",\n          value: password2,\n          onChange: e => {\n            setPassword2(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"green\",\n        type: \"submit\",\n        style: {\n          height: '3rem',\n          background: '',\n          borderRadius: '15%',\n          border: `3px solid white`,\n          color: 'white'\n        },\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserSignUp, \"2w3MeZxLUuDtn/jXuKr2YjkCbsk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserSignUp;\nexport default UserSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSignUp\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/User/UserSignUp.jsx"],"names":["React","useState","Form","InputGroup","FormControl","Button","useDispatch","useSelector","selectUsers","postUser","UserSignUp","dispatch","users","username","setUsername","password1","setPassword1","password2","setPassword2","checkAuth","e","preventDefault","alert","user","find","password","target","value","height","background","borderRadius","border","color"],"mappings":"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","sourcesContent":["import './User.css'; \r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUsers } from \"../../state/usersSlice\";\r\nimport { postUser } from \"../../actions/userActions\";\r\n\r\n\r\nfunction UserSignUp() {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(selectUsers);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password1, setPassword1] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n\r\n  const checkAuth = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (username === \"\") return alert(\"username cannot be empty\");\r\n    if (password1 === \"\") return alert(\"create password cannot be empty\");\r\n    if (password2 === \"\") return alert(\"confirm password cannot be empty\");\r\n    let user = users.find((e) => e.username === username);\r\n    if (user) return alert(\"username already exists\");\r\n    if (password1 !== password2) alert(\"your passwords don't match\");\r\n    dispatch(\r\n      postUser({\r\n        username: username,\r\n        password: password1,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-sign-up\">\r\n        <br/>  <br/>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          checkAuth(e);\r\n        }}\r\n      >\r\n    Sign Up\r\n        <Form.Group className=\"mb-3\" >\r\n          <InputGroup>\r\n            <FormControl\r\n              className=\"username-input\"\r\n              id=\"inlineFormInputGroupUsername\"\r\n              placeholder=\"create username\"\r\n              value={username}\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        {/* <br /> */}\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control\r\n            className=\"password-input\"\r\n            type=\"password\"\r\n            placeholder=\"create password\"\r\n            value={password1}\r\n            onChange={(e) => {\r\n              setPassword1(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control\r\n            className=\"password-input\"\r\n            type=\"password\"\r\n            placeholder=\"confirm password\"\r\n            value={password2}\r\n            onChange={(e) => {\r\n              setPassword2(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n      \r\n        <Button variant=\"green\" type=\"submit\"\r\n       style={{height:'3rem', background: '',borderRadius:'15%', border: `3px solid white`,\r\n       color:'white' }}\r\n        >\r\n          login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserSignUp;\r\n"]},"metadata":{},"sourceType":"module"}