{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; //import { updateUser } from \"../api/userAPI\";\n\nlet users = [];\nlet localUserInfo = JSON.parse(localStorage.getItem(\"localUserInfo\"));\n\nif (!localUserInfo) {\n  localUserInfo = {\n    loggedIn: false\n  };\n  localStorage.setItem(\"localUserInfo\", JSON.stringify(localUserInfo));\n}\n\nexport const usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    users,\n    localUserInfo\n  },\n  reducers: {\n    allUsers: (state, action) => {\n      state.users = action.payload;\n    },\n    loginUser: (state, action) => {\n      state.localUserInfo = action.payload;\n      localStorage.setItem(\"localUserInfo\", JSON.stringify(state.localUserInfo));\n    },\n    addUser: (state, action) => {\n      state.users.push(action.payload);\n\n      if (action.payload.password === \"\") {\n        state.localUserInfo = {\n          user_id: action.payload._id,\n          loggedIn: false\n        };\n      }\n\n      if (action.payload.password !== \"\") {\n        state.localUserInfo = {\n          user_id: action.payload._id,\n          loggedIn: true\n        };\n      }\n\n      localStorage.setItem(\"localUserInfo\", JSON.stringify(state.localUserInfo));\n    },\n    editUser: (state, action) => {},\n    removeUser: (state, action) => {\n      state.users.splice(state.users.findIndex(e => e._id === action.payload, 1));\n      localStorage.setItem(\"users\", JSON.stringify(state.users));\n    },\n    editUserActive: (state, action) => {\n      const index = state.users.findIndex(user => user._id === action.payload._id);\n      state.users[index].active = action.payload.active;\n      state.users[index].socket_id = action.payload.socket_id;\n    },\n    editUserAvatar: (state, action) => {\n      const index = state.users.findIndex(user => user._id === action.payload._id);\n      state.users[index].avatar = action.payload.avatar;\n    }\n  }\n});\nexport const {\n  allUsers,\n  loginUser,\n  addUser,\n  editUser,\n  removeUser,\n  editUserActive,\n  editUserAvatar\n} = usersSlice.actions;\nexport const selectUsers = state => state.users.users;\nexport const selectLocalUserInfo = state => state.users.localUserInfo;\nexport default usersSlice.reducer;","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/state/usersSlice.js"],"names":["createSlice","users","localUserInfo","JSON","parse","localStorage","getItem","loggedIn","setItem","stringify","usersSlice","name","initialState","reducers","allUsers","state","action","payload","loginUser","addUser","push","password","user_id","_id","editUser","removeUser","splice","findIndex","e","editUserActive","index","user","active","socket_id","editUserAvatar","avatar","actions","selectUsers","selectLocalUserInfo","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//import { updateUser } from \"../api/userAPI\";\r\n\r\nlet users = [];\r\n\r\nlet localUserInfo = JSON.parse(localStorage.getItem(\"localUserInfo\"));\r\n\r\nif (!localUserInfo) {\r\n  localUserInfo = {\r\n    loggedIn: false,\r\n  };\r\n  localStorage.setItem(\"localUserInfo\", JSON.stringify(localUserInfo));\r\n}\r\n\r\nexport const usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    users,\r\n    localUserInfo,\r\n  },\r\n  reducers: {\r\n    allUsers: (state, action) => {\r\n      state.users = action.payload;\r\n    },\r\n    loginUser: (state, action) => {\r\n      state.localUserInfo = action.payload;\r\n      localStorage.setItem(\r\n        \"localUserInfo\",\r\n        JSON.stringify(state.localUserInfo)\r\n      );\r\n    },\r\n    addUser: (state, action) => {\r\n      state.users.push(action.payload);\r\n      if (action.payload.password === \"\") {\r\n        state.localUserInfo = { user_id: action.payload._id, loggedIn: false };\r\n      }\r\n      if (action.payload.password !== \"\") {\r\n        state.localUserInfo = {\r\n          user_id: action.payload._id,\r\n          loggedIn: true,\r\n        };\r\n      }\r\n      localStorage.setItem(\r\n        \"localUserInfo\",\r\n        JSON.stringify(state.localUserInfo)\r\n      );\r\n    },\r\n    editUser: (state, action) => { },\r\n    removeUser: (state, action) => {\r\n      state.users.splice(\r\n        state.users.findIndex((e) => e._id === action.payload, 1)\r\n      );\r\n      localStorage.setItem(\"users\", JSON.stringify(state.users));\r\n    },\r\n    editUserActive: (state, action) => {\r\n      const index = state.users.findIndex(\r\n        (user) => user._id === action.payload._id\r\n      );\r\n      state.users[index].active = action.payload.active;\r\n      state.users[index].socket_id = action.payload.socket_id;\r\n    },\r\n    editUserAvatar: (state, action) => {\r\n      const index = state.users.findIndex(\r\n        (user) => user._id === action.payload._id\r\n      );\r\n      state.users[index].avatar = action.payload.avatar;\r\n    },\r\n    },\r\n});\r\n\r\nexport const {\r\n  allUsers,\r\n  loginUser,\r\n  addUser,\r\n  editUser,\r\n  removeUser,\r\n  editUserActive,\r\n  editUserAvatar,\r\n} = usersSlice.actions;\r\n\r\nexport const selectUsers = (state) => state.users.users;\r\nexport const selectLocalUserInfo = (state) => state.users.localUserInfo;\r\n\r\nexport default usersSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}