{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Git\\\\Array\\\\projects\\\\arrayapp\\\\client\\\\src\\\\components\\\\Lessons\\\\NewLesson.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Modal, Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\"; //import { selectLessons } from \"../../state/lessonSlice\";\n\nimport { postLesson } from \"../../actions/lessonActions\";\nimport './Lesson.css';\nimport '../Components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewLesson() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => setShow(false);\n\n  const dispatch = useDispatch(); //const lessons = useSelector(selectLessons);\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [id, setID] = useState(\"\");\n\n  const submitLesson = e => {\n    e.preventDefault();\n    if (title === \"\") return alert(\"title cannot be empty\");\n    if (author === \"\") return alert(\"author cannot be empty\");\n    if (text === \"\") return alert(\"text cannot be empty\"); //if (id !anumber)\n    //let lesson = lessons.find((e) => e.title === title);\n    //if (lesson) return alert(\"title already exists\");\n\n    dispatch(postLesson({\n      title: title,\n      author: author,\n      text: text,\n      id: id\n    }));\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"lesson-sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      width: \"100rem\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          submitLesson(e);\n        },\n        children: [\"   \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this), \"\\xA0 New Lesson\", /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              className: \"title-input\",\n              placeholder: \"create title\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: \"id-input\",\n              id: \"inlineFormInputGroupUsername\",\n              placeholder: \"give id\",\n              value: id,\n              onChange: e => {\n                setID(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"author-input\",\n            placeholder: \"author\",\n            value: author,\n            onChange: e => {\n              setAuthor(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            className: \"text-input\",\n            placeholder: \"enter content\",\n            value: text,\n            onChange: e => {\n              setText(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"green\",\n          type: \"submit\",\n          style: {\n            height: '3rem',\n            background: '',\n            borderRadius: '15%',\n            border: `3px solid white`\n          },\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      children: \"New Lesson\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewLesson, \"E21d0Efg8aXiVKMOU1s7kUfFymI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NewLesson;\nexport default NewLesson;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLesson\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/Lessons/NewLesson.jsx"],"names":["React","useState","Container","Modal","Form","InputGroup","FormControl","Button","useDispatch","useSelector","postLesson","NewLesson","show","setShow","handleShow","handleClose","dispatch","title","setTitle","author","setAuthor","text","setText","id","setID","submitLesson","e","preventDefault","alert","target","value","height","background","borderRadius","border"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Container, Modal,Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { selectLessons } from \"../../state/lessonSlice\";\r\nimport { postLesson } from \"../../actions/lessonActions\";\r\n\r\nimport './Lesson.css'\r\nimport '../Components.css'\r\n\r\n\r\n\r\n\r\nfunction NewLesson() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {\r\n      setShow(true); \r\n    }\r\n    const handleClose = () => setShow(false);\r\n\r\n  const dispatch = useDispatch();\r\n  //const lessons = useSelector(selectLessons);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [id, setID] = useState(\"\");\r\n\r\n  const submitLesson= (e) => {\r\n    e.preventDefault();\r\n    if (title === \"\") return alert(\"title cannot be empty\");\r\n    if (author === \"\") return alert(\"author cannot be empty\");\r\n    if (text === \"\") return alert(\"text cannot be empty\");\r\n    //if (id !anumber)\r\n    //let lesson = lessons.find((e) => e.title === title);\r\n    //if (lesson) return alert(\"title already exists\");\r\n    dispatch(\r\n      postLesson({\r\n        title: title,\r\n        author: author,\r\n        text: text,\r\n        id: id,\r\n      })\r\n    );\r\n  handleClose(); \r\n};\r\n\r\n  return (\r\n    <Container className=\"lesson-sign-up\">\r\n      <Modal show={show} onHide={handleClose}width=\"100rem\">\r\n\r\n      <Form\r\n        onSubmit={(e) => {\r\n          submitLesson(e);\r\n        }}\r\n      >   <br/>  <br/>\r\n  &nbsp; New Lesson \r\n        <Form.Group className=\"mb-3\" >\r\n          <InputGroup>\r\n            <FormControl\r\n              className=\"title-input\"\r\n              placeholder=\"create title\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n                  <FormControl\r\n              className=\"id-input\"\r\n              id=\"inlineFormInputGroupUsername\"\r\n              placeholder=\"give id\"\r\n              value={id}\r\n              onChange={(e) => {\r\n                setID(e.target.value);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        {/* <br /> */}\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control\r\n            className=\"author-input\"\r\n            placeholder=\"author\"\r\n            value={author}\r\n            onChange={(e) => {\r\n              setAuthor(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control as=\"textarea\"\r\n            className=\"text-input\"\r\n            placeholder=\"enter content\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n   \r\n        <Button variant=\"green\" type=\"submit\"\r\n       style={{height:'3rem', background: '',borderRadius:'15%', border: `3px solid white`,\r\n        }}\r\n        >\r\n          submit\r\n        </Button>\r\n      </Form>\r\n   </Modal>\r\n   <br/><br/>\r\n   <Button onClick={handleShow}>New Lesson</Button>\r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewLesson;\r\n"]},"metadata":{},"sourceType":"module"}