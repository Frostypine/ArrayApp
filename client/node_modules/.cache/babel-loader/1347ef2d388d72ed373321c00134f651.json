{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Git\\\\Array\\\\projects\\\\arrayapp\\\\client\\\\src\\\\components\\\\Navigation.jsx\",\n    _s = $RefreshSig$();\n\n// import './Components.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import arrayPic from '../pics/arrayimg1.png'; \n// import { Navbar, Nav, NavDropdown, Container  } from \"react-bootstrap\";\n// import { Link } from \"react-router-dom\";\n// //import { useState } from \"react\";//, useEffect\n// //import { useLocation, useNavigate } from \"react-router\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   editUserActive,\n//   selectLocalUserInfo,\n//   selectUsers,\n// } from \"../state/usersSlice\";\n// import { postUser } from \"../actions/userActions\";\n// import { updateUser } from \"../api/userAPI\";\n// function Navigation() \n// {\n//   const dispatch = useDispatch();\n//   const localUserInfo = useSelector(selectLocalUserInfo);\n//   const loggedIn = localUserInfo.loggedIn;\n//   const users = useSelector(selectUsers);\n//   const user = users.find((e) => e._id === localUserInfo.user_id);\n//   const logout = () => {\n//     const userData = {\n//       _id: localUserInfo.user_id,\n//       active: false,\n//     };\n//     updateUser(userData._id, {\n//       active: userData.active,\n//     });\n//     dispatch(editUserActive(userData));\n//     dispatch(\n//       postUser({\n//         username: \"\",\n//         password: \"\",\n//       })\n//     );\n//   };\n//    //const [login, setLogin] = useState(\"\");\n//   // const location = useLocation().pathname;\n//  // const navigate = useNavigate();\n//   return !users ? (\n//       <div></div>\n//     ) : (\n//     <header className=\"navigation\">\n// <Navbar>\n//   <Container style={{color:'white'}}>\n//     <br/><br/><br/><br/>\n//     <Navbar.Brand><Link to='/'> \n//      {/* Home */}\n//      <img src={arrayPic} alt=\"home\" className='array-home'/>\n//      </Link></Navbar.Brand>\n//     <Navbar.Toggle />\n//     <Navbar.Collapse className=\"justify-content-end\">\n//       <Nav>\n//     <br/><br/><br/><br/>\n//     {!user ? (\n//                 <div></div>\n//               ) : loggedIn ? (\n//                 <div className=\"nav-profile-dropdown\">\n//                   <img\n//                     className=\"nav-profile-pic\"\n//                     style={{ border: `1px solid red` }}//${user.color}\n//                     src={user.avatar}\n//                     alt=\"\"\n//                     // onClick={() => {\n//                     //   navigate(\"/user/profile\");\n//                     // }}\n//                   />\n//                   <NavDropdown className=\"dropdown\" id=\"basic-nav-dropdown\">\n//                     {/* <NavDropdown.Item>\n//                       <Link className=\"dropdown-item\" to=\"/user/profile\">\n//                         Profile\n//                       </Link>\n//                     </NavDropdown.Item>\n//                     <NavDropdown.Item>\n//                       <Link className=\"dropdown-item\" to=\"/user/settings\">\n//                         Settings\n//                       </Link>\n//                     </NavDropdown.Item>\n//                     <NavDropdown.Divider />\n//                     <NavDropdown.Item>\n//                       <Link className=\"dropdown-item\" to=\"/user/leaderboard\">\n//                         Leaderboard\n//                       </Link>\n//                     </NavDropdown.Item>\n//                     <NavDropdown.Divider /> */}\n//                     <NavDropdown.Item\n//                       onClick={() => {\n//                         logout();\n//                       }}\n//                     >\n//                       Logout\n//                     </NavDropdown.Item>\n//                   </NavDropdown>\n//                 </div>\n//               ) : (\n//                 <Link className={\"link \" } to=\"/user/login\">\n//                   Login\n//                 </Link>\n//               )}\n//       {/*+ login <Navbar.Text>\n//     login spot  \n//       </Navbar.Text> */}\n//       </Nav>\n//     </Navbar.Collapse>\n//   </Container>\n// </Navbar>\n//     </header>\n//   );\n// }\n// export default Navigation;\nimport { useState, useEffect } from \"react\";\nimport { Navbar, NavDropdown, Container, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editUserActive, selectLocalUserInfo, selectUsers } from \"../state/usersSlice\";\nimport { postUser } from \"../actions/userActions\";\nimport { updateUser } from \"../api/userAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navigation() {\n  _s();\n\n  const dispatch = useDispatch();\n  const localUserInfo = useSelector(selectLocalUserInfo);\n  const loggedIn = localUserInfo.loggedIn;\n  const users = useSelector(selectUsers);\n  const user = users.find(e => e._id === localUserInfo.user_id);\n\n  const logout = () => {\n    const randomNumber = Math.floor(Math.random() * 100000000000000);\n    const userData = {\n      _id: localUserInfo.user_id,\n      socket_id: \"\",\n      active: false\n    };\n    updateUser(userData._id, {\n      active: userData.active,\n      socket_id: userData.socket_id\n    });\n    dispatch(editUserActive(userData));\n    dispatch(postUser({\n      username: `user${randomNumber}`,\n      password: \"\"\n    }));\n  };\n\n  const [chat, setChat] = useState(\"\");\n  const [about, setAbout] = useState(\"\");\n  const [login, setLogin] = useState(\"\");\n  const location = useLocation().pathname;\n  const navigate = useNavigate(); // const [test, setTest] = useState(\"\");\n\n  useEffect(() => {\n    if (location === \"/chat\") {\n      setChat(\"active\");\n      setAbout(\"\");\n      setLogin(\"\");\n    } else if (location === \"/about\") {\n      setAbout(\"active\");\n      setChat(\"\");\n      setLogin(\"\");\n    } else if (location === \"/user/login\") {\n      setLogin(\"active\");\n      setChat(\"\");\n      setAbout(\"\");\n    } else if (location === \"/test\") {\n      setLogin(\"active\");\n      setChat(\"\");\n      setAbout(\"\");\n    } else {\n      setLogin(\"\");\n      setChat(\"\");\n      setAbout(\"\");\n    }\n  }, [location]);\n  return !users ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navigation\",\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      collapseOnSelect: true,\n      expand: \"md\",\n      bg: \"black\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link logo\",\n          to: \"/\",\n          children: \"Arcade Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"responsive-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"responsive-navbar-nav\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            default: true,\n            activeKey: \"/\",\n            className: \"ms-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"link \" + chat,\n              to: \"/chat/general\",\n              children: \"Chatrooms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link \" + about,\n              to: \"/about\",\n              children: \"About Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this) : loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-profile-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"nav-profile-pic\",\n                style: {\n                  border: `1px solid ${user.color}`\n                },\n                src: user.avatar,\n                alt: \"\",\n                onClick: () => {\n                  navigate(\"/user/profile\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n                className: \"dropdown\",\n                id: \"basic-nav-dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"dropdown-item\",\n                    to: \"/user/profile\",\n                    children: \"Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"dropdown-item\",\n                    to: \"/user/settings\",\n                    children: \"Settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"dropdown-item\",\n                    to: \"/user/leaderboard\",\n                    children: \"Leaderboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  onClick: () => {\n                    logout();\n                  },\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link \" + login,\n              to: \"/user/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navigation, \"pslsfcvPno46Ti4SsjoWBfTPhFQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useLocation, useNavigate];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/Navigation.jsx"],"names":["useState","useEffect","Navbar","NavDropdown","Container","Nav","Link","useLocation","useNavigate","useDispatch","useSelector","editUserActive","selectLocalUserInfo","selectUsers","postUser","updateUser","Navigation","dispatch","localUserInfo","loggedIn","users","user","find","e","_id","user_id","logout","randomNumber","Math","floor","random","userData","socket_id","active","username","password","chat","setChat","about","setAbout","login","setLogin","location","pathname","navigate","border","color","avatar"],"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","sourcesContent":["\r\n// import './Components.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import arrayPic from '../pics/arrayimg1.png'; \r\n// import { Navbar, Nav, NavDropdown, Container  } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n// //import { useState } from \"react\";//, useEffect\r\n// //import { useLocation, useNavigate } from \"react-router\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   editUserActive,\r\n//   selectLocalUserInfo,\r\n//   selectUsers,\r\n// } from \"../state/usersSlice\";\r\n// import { postUser } from \"../actions/userActions\";\r\n// import { updateUser } from \"../api/userAPI\";\r\n\r\n// function Navigation() \r\n// {\r\n//   const dispatch = useDispatch();\r\n//   const localUserInfo = useSelector(selectLocalUserInfo);\r\n//   const loggedIn = localUserInfo.loggedIn;\r\n//   const users = useSelector(selectUsers);\r\n//   const user = users.find((e) => e._id === localUserInfo.user_id);\r\n\r\n//   const logout = () => {\r\n//     const userData = {\r\n//       _id: localUserInfo.user_id,\r\n//       active: false,\r\n//     };\r\n//     updateUser(userData._id, {\r\n//       active: userData.active,\r\n//     });\r\n//     dispatch(editUserActive(userData));\r\n//     dispatch(\r\n//       postUser({\r\n//         username: \"\",\r\n//         password: \"\",\r\n//       })\r\n//     );\r\n//   };\r\n\r\n\r\n//    //const [login, setLogin] = useState(\"\");\r\n//   // const location = useLocation().pathname;\r\n//  // const navigate = useNavigate();\r\n\r\n//   return !users ? (\r\n//       <div></div>\r\n//     ) : (\r\n//     <header className=\"navigation\">\r\n// <Navbar>\r\n//   <Container style={{color:'white'}}>\r\n//     <br/><br/><br/><br/>\r\n//     <Navbar.Brand><Link to='/'> \r\n//      {/* Home */}\r\n//      <img src={arrayPic} alt=\"home\" className='array-home'/>\r\n//      </Link></Navbar.Brand>\r\n//     <Navbar.Toggle />\r\n//     <Navbar.Collapse className=\"justify-content-end\">\r\n//       <Nav>\r\n//     <br/><br/><br/><br/>\r\n//     {!user ? (\r\n//                 <div></div>\r\n//               ) : loggedIn ? (\r\n//                 <div className=\"nav-profile-dropdown\">\r\n//                   <img\r\n//                     className=\"nav-profile-pic\"\r\n//                     style={{ border: `1px solid red` }}//${user.color}\r\n//                     src={user.avatar}\r\n//                     alt=\"\"\r\n//                     // onClick={() => {\r\n//                     //   navigate(\"/user/profile\");\r\n//                     // }}\r\n//                   />\r\n//                   <NavDropdown className=\"dropdown\" id=\"basic-nav-dropdown\">\r\n//                     {/* <NavDropdown.Item>\r\n//                       <Link className=\"dropdown-item\" to=\"/user/profile\">\r\n//                         Profile\r\n//                       </Link>\r\n//                     </NavDropdown.Item>\r\n//                     <NavDropdown.Item>\r\n//                       <Link className=\"dropdown-item\" to=\"/user/settings\">\r\n//                         Settings\r\n//                       </Link>\r\n//                     </NavDropdown.Item>\r\n//                     <NavDropdown.Divider />\r\n//                     <NavDropdown.Item>\r\n//                       <Link className=\"dropdown-item\" to=\"/user/leaderboard\">\r\n//                         Leaderboard\r\n//                       </Link>\r\n//                     </NavDropdown.Item>\r\n\r\n//                     <NavDropdown.Divider /> */}\r\n//                     <NavDropdown.Item\r\n//                       onClick={() => {\r\n//                         logout();\r\n//                       }}\r\n//                     >\r\n//                       Logout\r\n//                     </NavDropdown.Item>\r\n//                   </NavDropdown>\r\n//                 </div>\r\n//               ) : (\r\n//                 <Link className={\"link \" } to=\"/user/login\">\r\n//                   Login\r\n//                 </Link>\r\n//               )}\r\n\r\n//       {/*+ login <Navbar.Text>\r\n//     login spot  \r\n//       </Navbar.Text> */}\r\n\r\n//       </Nav>\r\n//     </Navbar.Collapse>\r\n//   </Container>\r\n// </Navbar>\r\n\r\n\r\n//     </header>\r\n//   );\r\n// }\r\n\r\n// export default Navigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Navbar, NavDropdown, Container, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  editUserActive,\r\n  selectLocalUserInfo,\r\n  selectUsers,\r\n} from \"../state/usersSlice\";\r\nimport { postUser } from \"../actions/userActions\";\r\nimport { updateUser } from \"../api/userAPI\";\r\n\r\nfunction Navigation() {\r\n  const dispatch = useDispatch();\r\n  const localUserInfo = useSelector(selectLocalUserInfo);\r\n  const loggedIn = localUserInfo.loggedIn;\r\n  const users = useSelector(selectUsers);\r\n  const user = users.find((e) => e._id === localUserInfo.user_id);\r\n\r\n  const logout = () => {\r\n    const randomNumber = Math.floor(Math.random() * 100000000000000);\r\n    const userData = {\r\n      _id: localUserInfo.user_id,\r\n      socket_id: \"\",\r\n      active: false,\r\n    };\r\n    updateUser(userData._id, {\r\n      active: userData.active,\r\n      socket_id: userData.socket_id,\r\n    });\r\n    dispatch(editUserActive(userData));\r\n    dispatch(\r\n      postUser({\r\n        username: `user${randomNumber}`,\r\n        password: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const [chat, setChat] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n  const location = useLocation().pathname;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // const [test, setTest] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (location === \"/chat\") {\r\n      setChat(\"active\");\r\n      setAbout(\"\");\r\n      setLogin(\"\");\r\n    } else if (location === \"/about\") {\r\n      setAbout(\"active\");\r\n      setChat(\"\");\r\n      setLogin(\"\");\r\n    } else if (location === \"/user/login\") {\r\n      setLogin(\"active\");\r\n      setChat(\"\");\r\n      setAbout(\"\");\r\n    } else if (location === \"/test\") {\r\n      setLogin(\"active\");\r\n      setChat(\"\");\r\n      setAbout(\"\");\r\n    } else {\r\n      setLogin(\"\");\r\n      setChat(\"\");\r\n      setAbout(\"\");\r\n    }\r\n  }, [location]);\r\n\r\n  return !users ? (\r\n    <div></div>\r\n  ) : (\r\n    <div className=\"navigation\">\r\n      <Navbar collapseOnSelect expand=\"md\" bg=\"black\" variant=\"dark\">\r\n        <Container fluid>\r\n          <Link className=\"nav-link logo\" to=\"/\">\r\n            Arcade Room\r\n          </Link>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav default activeKey=\"/\" className=\"ms-auto\">\r\n              <Link className={\"link \" + chat} to=\"/chat/general\">\r\n                Chatrooms\r\n              </Link>\r\n              <Link className={\"link \" + about} to=\"/about\">\r\n                About Us\r\n              </Link>\r\n              {!user ? (\r\n                <div></div>\r\n              ) : loggedIn ? (\r\n                <div className=\"nav-profile-dropdown\">\r\n                  <img\r\n                    className=\"nav-profile-pic\"\r\n                    style={{ border: `1px solid ${user.color}` }}\r\n                    src={user.avatar}\r\n                    alt=\"\"\r\n                    onClick={() => {\r\n                      navigate(\"/user/profile\");\r\n                    }}\r\n                  />\r\n                  <NavDropdown className=\"dropdown\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item>\r\n                      <Link className=\"dropdown-item\" to=\"/user/profile\">\r\n                        Profile\r\n                      </Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item>\r\n                      <Link className=\"dropdown-item\" to=\"/user/settings\">\r\n                        Settings\r\n                      </Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item>\r\n                      <Link className=\"dropdown-item\" to=\"/user/leaderboard\">\r\n                        Leaderboard\r\n                      </Link>\r\n                    </NavDropdown.Item>\r\n\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item\r\n                      onClick={() => {\r\n                        logout();\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </div>\r\n              ) : (\r\n                <Link className={\"link \" + login} to=\"/user/login\">\r\n                  Login\r\n                </Link>\r\n              )}\r\n\r\n              {/* <Link className={\"link \" + test} to=\"/test\">\r\n                test\r\n              </Link> */}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}