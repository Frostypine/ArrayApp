{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Git\\\\Array\\\\projects\\\\arrayapp\\\\client\\\\src\\\\components\\\\Lessons\\\\NewLesson.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Modal, Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLessons } from \"../../state/lessonSlice\";\nimport { postLesson } from \"../../actions/lessonActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewLesson() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => setShow(false);\n\n  const dispatch = useDispatch();\n  const lessons = useSelector(selectLessons);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [id, setID] = useState(\"\");\n\n  const submitLesson = e => {\n    e.preventDefault();\n    if (title === \"\") return alert(\"title cannot be empty\");\n    if (author === \"\") return alert(\"author cannot be empty\");\n    if (text === \"\") return alert(\"text cannot be empty\");\n    let lesson = lessons.find(e => e.title === title);\n    if (lesson) return alert(\"title already exists\");\n    dispatch(postLesson({\n      title: title,\n      author: author,\n      text: text,\n      id: id\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lesson-sign-up\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        submitLesson(e);\n      },\n      children: [\"   \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this), \"Sign Up\", /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"title-input\",\n            placeholder: \"create title\",\n            value: title,\n            onChange: e => {\n              setTitle(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"id-input\",\n            id: \"inlineFormInputGroupUsername\",\n            placeholder: \"give id\",\n            value: id,\n            onChange: e => {\n              setID(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"author-input\",\n          placeholder: \"create password\",\n          value: author,\n          onChange: e => {\n            setAuthor(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"text-input\",\n          placeholder: \"enter content\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"green\",\n        type: \"submit\",\n        style: {\n          height: '3rem',\n          background: '',\n          borderRadius: '15%',\n          border: `3px solid white`,\n          color: 'white'\n        },\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewLesson, \"k3RStzWFxLXwJOWQyYsr+Vmliyo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewLesson;\nexport default NewLesson;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLesson\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/Lessons/NewLesson.jsx"],"names":["React","useState","Container","Modal","Form","InputGroup","FormControl","Button","useDispatch","useSelector","selectLessons","postLesson","NewLesson","show","setShow","handleShow","handleClose","dispatch","lessons","title","setTitle","author","setAuthor","text","setText","id","setID","submitLesson","e","preventDefault","alert","lesson","find","target","value","height","background","borderRadius","border","color"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { Container, Modal,Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectLessons } from \"../../state/lessonSlice\";\r\nimport { postLesson } from \"../../actions/lessonActions\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction NewLesson() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {\r\n      setShow(true); \r\n    }\r\n    const handleClose = () => setShow(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const lessons = useSelector(selectLessons);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [id, setID] = useState(\"\");\r\n\r\n  const submitLesson= (e) => {\r\n    e.preventDefault();\r\n    if (title === \"\") return alert(\"title cannot be empty\");\r\n    if (author === \"\") return alert(\"author cannot be empty\");\r\n    if (text === \"\") return alert(\"text cannot be empty\");\r\n    let lesson = lessons.find((e) => e.title === title);\r\n    if (lesson) return alert(\"title already exists\");\r\n    dispatch(\r\n      postLesson({\r\n        title: title,\r\n        author: author,\r\n        text: text,\r\n        id: id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"lesson-sign-up\">\r\n      {/* <Modal show={show} onHide={handleClose}width=\"100rem\"> */}\r\n\r\n      <Form\r\n        onSubmit={(e) => {\r\n          submitLesson(e);\r\n        }}\r\n      >   <br/>  <br/>\r\n    Sign Up\r\n        <Form.Group className=\"mb-3\" >\r\n          <InputGroup>\r\n            <FormControl\r\n              className=\"title-input\"\r\n              placeholder=\"create title\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n                  <FormControl\r\n              className=\"id-input\"\r\n              id=\"inlineFormInputGroupUsername\"\r\n              placeholder=\"give id\"\r\n              value={id}\r\n              onChange={(e) => {\r\n                setID(e.target.value);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        {/* <br /> */}\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control\r\n            className=\"author-input\"\r\n            placeholder=\"create password\"\r\n            value={author}\r\n            onChange={(e) => {\r\n              setAuthor(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control\r\n            className=\"text-input\"\r\n            placeholder=\"enter content\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n   \r\n        <Button variant=\"green\" type=\"submit\"\r\n       style={{height:'3rem', background: '',borderRadius:'15%', border: `3px solid white`,\r\n       color:'white' }}\r\n        >\r\n          submit\r\n        </Button>\r\n      </Form>\r\n   {/* </Modal> <Button onClick={handleShow}>New Lesson</Button> */}\r\n\r\n  \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewLesson;\r\n"]},"metadata":{},"sourceType":"module"}