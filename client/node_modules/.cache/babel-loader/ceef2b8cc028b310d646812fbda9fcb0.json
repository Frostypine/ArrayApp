{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Git\\\\Array\\\\projects\\\\arrayapp\\\\client\\\\src\\\\components\\\\Groupwork\\\\GroupBox.jsx\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'; //import * as ReactDom from 'react-dom';\n//import './gwScript.js';\n\nimport './Groupwork.css';\nimport taskData from './TaskData'; //import { useDropzone } from \"react-dropzone\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GroupBox() {\n  let groupMemberArr = [\"Alex\", \"Anthony\", \"Bowen\", \"Dustin\"]; //, \"Ethan\", \"Katie\", \"Shawn\", \"Steve\", \"Taylor\", \"Trevor\", \"Rison\", \"Solomon\"];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GroupBox\",\n    children: [\"GroupBox\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupMember-list\",\n      children: groupMemberArr.map((member, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        draggable: \"true\" //onDragStart={drag(e)}\n        //id={`drag${i}`}\n        ,\n        children: [member, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 1\n      }, this) //console.log(member)\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: taskData.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [\" \", data.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 1\n            }, this)\n          }, `task${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: taskData.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            id: `task-${i}`,\n            children: [\" \", i]\n          }, `task${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 1\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GroupBox;\nexport default GroupBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupBox\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/Groupwork/GroupBox.jsx"],"names":["React","Container","Row","Col","taskData","GroupBox","groupMemberArr","map","member","i","data","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC,C,CACA;AAEA;;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;;;AAGC,SAASC,QAAT,GAAoB;AAErB,MAAIC,cAAc,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,QAA7B,CAArB,CAFqB,CAEuC;;AAI1D,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,wCAGJ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAECA,cAAc,CAACC,GAAf,CAAmB,CAACC,MAAD,EAAQC,CAAR,kBAEpB;AACA,QAAA,SAAS,EAAC,MADV,CAEA;AACA;AAHA;AAAA,mBAIED,MAJF,oBAIU;AAAA;AAAA;AAAA;AAAA,gBAJV;AAAA,SAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,cAFoB,CAOpB;AAPC;AAFD;AAAA;AAAA;AAAA;AAAA,YAHI,eAiBI,QAAC,SAAD;AAAA,8BAGJ,QAAC,GAAD;AAAA,kBACCL,QAAQ,CAACG,GAAT,CAAa,CAACG,IAAD,EAAOD,CAAP,KAAY;AACtB,8BACE;AAAA,mCAGV,QAAC,GAAD;AAAA,8BAAQC,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAHU,aACM,OAAMF,CAAE,EADd;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATF;AADD;AAAA;AAAA;AAAA;AAAA,cAHI,eA0BK,QAAC,GAAD;AAAA,kBACIL,QAAQ,CAACG,GAAT,CAAa,CAACG,IAAD,EAAOD,CAAP,KAAY;AAClC,8BAER,QAAC,GAAD;AAAK,YAAA,EAAE,EAAG,QAAOA,CAAE,EAAnB;AAAA,4BAAyCA,CAAzC;AAAA,aAA4B,OAAMA,CAAE,EAApC;AAAA;AAAA;AAAA;AAAA,kBAFQ;AAKD,SANU;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BL,eAoCJ,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cApCI;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;KAnESJ,Q;AAoEV,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n//import * as ReactDom from 'react-dom';\r\n\r\n//import './gwScript.js';\r\nimport './Groupwork.css'\r\nimport taskData from './TaskData'; \r\n//import { useDropzone } from \"react-dropzone\";\r\n\r\n\r\n function GroupBox() {\r\n\r\nlet groupMemberArr = [\"Alex\", \"Anthony\", \"Bowen\", \"Dustin\"];//, \"Ethan\", \"Katie\", \"Shawn\", \"Steve\", \"Taylor\", \"Trevor\", \"Rison\", \"Solomon\"];\r\n\r\n\r\n\r\n  return (\r\n    <div className='GroupBox'>\r\n        {/* <script src=\"gwScript.js\"></script> */}\r\n        GroupBox\r\n<div className='groupMember-list'>\r\n\r\n{groupMemberArr.map((member,i) => (\r\n\r\n<p key={i}\r\ndraggable='true'\r\n//onDragStart={drag(e)}\r\n//id={`drag${i}`}\r\n>{member} <br/></p>\r\n//console.log(member)\r\n\r\n\r\n) ) }\r\n</div>\r\n        <Container \r\n        \r\n        >\r\n    <Row>\r\n    {taskData.map((data, i)=> {\r\n        return (\r\n          <div\r\n          key={`task${i}`}\r\n          > \r\n<Col > {data.name}</Col>\r\n          </div> \r\n       \r\n       );\r\n      })}        \r\n    </Row>\r\n  \r\n        {/*  <Col id='task-1'\r\n         >\r\n         <div\r\n         style={{\r\n           height: '10rem',\r\n           width: '10rem',\r\n           border: `6px solid blue` ,\r\n         }}\r\n          onDrop={drop(e) } onDragOver={allowDrop(e)}\r\n         >1</div> */}\r\n             <Row>\r\n                {taskData.map((data, i)=> {\r\n        return (\r\n         \r\n<Col id={`task-${i}`} key={`task${i}`}> {i}</Col>\r\n            \r\n       );\r\n      })}\r\n    </Row>     \r\n    \r\n    <Row>\r\n\r\n    </Row>\r\n        </Container>\r\n        \r\n    </div>\r\n  )\r\n}\r\nexport default GroupBox; "]},"metadata":{},"sourceType":"module"}