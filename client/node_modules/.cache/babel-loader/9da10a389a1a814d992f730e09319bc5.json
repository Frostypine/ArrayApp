{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Git\\\\Array\\\\projects\\\\arrayapp\\\\client\\\\src\\\\components\\\\Groupwork\\\\TaskBox.jsx\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Groupwork.css';\nimport tasks from './TaskData'; //import { useSelector } from \"react-redux\";\n//import { selectTasks } from \"../../state/taskSlice\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(tasks);\nconsole.log(tasks[0].in);\n\nfunction TaskList() {\n  //const Tasks = useSelector(selectTasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"taskBox\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: tasks.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"task-name\",\n            children: data[i].name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: tasks.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            id: `task-${i}`,\n            children: data[i].info\n          }, `task${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/Groupwork/TaskBox.jsx"],"names":["React","Container","Row","Col","tasks","console","log","in","TaskList","map","data","i","name","info"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CACA;AACA;;;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC,CAAD,CAAL,CAASG,EAArB;;AACC,SAASC,QAAT,GAAoB;AACpB;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BAEA,QAAC,SAAD;AACI,MAAA,SAAS,EAAC,SADd;AAAA,8BAGA,QAAC,GAAD;AAAA,kBACWJ,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAY;AAC7B,8BACE,QAAC,GAAD;AACA,YAAA,SAAS,EAAC,WADV;AAAA,sBAIAD,IAAI,CAACC,CAAD,CAAJ,CAAQC;AAJR,aAEKD,CAFL;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATQ;AADX;AAAA;AAAA;AAAA;AAAA,cAHA,eAeA,QAAC,GAAD;AAAA,kBACCP,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAY;AACnB,8BACE,QAAC,GAAD;AACA,YAAA,EAAE,EAAG,QAAOA,CAAE,EADd;AAAA,sBAIAD,IAAI,CAACC,CAAD,CAAJ,CAAQE;AAJR,aAEM,OAAMF,CAAE,EAFd;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATF;AADD;AAAA;AAAA;AAAA;AAAA,cAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;KAzCSH,Q;AA2CV,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './Groupwork.css'; \r\nimport tasks from './TaskData';\r\n//import { useSelector } from \"react-redux\";\r\n//import { selectTasks } from \"../../state/taskSlice\";\r\nconsole.log(tasks)\r\nconsole.log(tasks[0].in)\r\n function TaskList() {\r\n //const Tasks = useSelector(selectTasks);\r\n\r\n  return (\r\n    <div className='task-list'>\r\n    \r\n    <Container \r\n        className='taskBox'\r\n        >\r\n    <Row>\r\n              {tasks.map((data, i)=> {\r\n        return (\r\n          <Col\r\n          className=\"task-name\"\r\n          key={i}\r\n          > \r\n         {data[i].name}\r\n          </Col> \r\n       );\r\n      })} \r\n    </Row>\r\n    <Row>\r\n    {tasks.map((data, i)=> {\r\n        return (\r\n          <Col\r\n          id={`task-${i}`}\r\n          key={`task${i}`}\r\n          > \r\n         {data[i].info}\r\n          </Col> \r\n       );\r\n      })} \r\n    </Row>\r\n\r\n        </Container>\r\n\r\n\r\n \r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TaskList; "]},"metadata":{},"sourceType":"module"}