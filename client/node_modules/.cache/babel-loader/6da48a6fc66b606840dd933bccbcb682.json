{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Git\\\\Array\\\\projects\\\\arrayapp\\\\client\\\\src\\\\components\\\\Lessons\\\\NewLesson.jsx\",\n    _s = $RefreshSig$();\n\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport './Lesson.css';\nimport React, { useState } from \"react\";\nimport { Container, Modal, Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLessons } from \"../../state/lessonSlice\";\nimport { postLesson } from \"../../actions/lessonActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewLesson() {\n  _s();\n\n  // const [show, setShow] = useState(false);\n  // const handleShow = () => {\n  //   setShow(true); \n  // }\n  //const handleClose = () => setShow(false);\n  //const dispatch = useDispatch();\n  const lessons = useSelector(selectLessons);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [id, setID] = useState(\"\"); //   const submitLesson= (e) => {\n  //     e.preventDefault();\n  //     if (title === \"\") return alert(\"title cannot be empty\");\n  //     if (author === \"\") return alert(\"author cannot be empty\");\n  //     if (text === \"\") return alert(\"text cannot be empty\");\n  //     let lesson = lessons.find((e) => e.title === title);\n  //     if (lesson) return alert(\"title already exists\");\n  //     dispatch(\n  //       postLesson({\n  //         title: title,\n  //         author: author,\n  //         text: text,\n  //         id: id,\n  //       })\n  //     );\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lesson-sign-up\",\n    children: \"bbbbb\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewLesson, \"ZNGW+yLvN1YFJ5lACe050KVNKFY=\", false, function () {\n  return [useSelector];\n});\n\n_c = NewLesson;\nexport default NewLesson;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLesson\");","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/components/Lessons/NewLesson.jsx"],"names":["React","useState","Container","Modal","Form","InputGroup","FormControl","Button","useDispatch","useSelector","selectLessons","postLesson","NewLesson","lessons","title","setTitle","author","setAuthor","text","setText","id","setID"],"mappings":";;;AAAA;AACA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,WAA5C,EAAyDC,MAAzD,QAAuE,iBAAvE;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,UAAT,QAA2B,6BAA3B;;;AAOA,SAASC,SAAT,GAAqB;AAAA;;AAEjB;AACA;AACA;AACA;AACA;AAEF;AACA,QAAMC,OAAO,GAAGJ,WAAW,CAACC,aAAD,CAA3B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,EAAD,EAAKC,KAAL,IAAcpB,QAAQ,CAAC,EAAD,CAA5B,CAbmB,CAerB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmED;;GAnGQW,S;UASSH,W;;;KATTG,S;AAqGT,eAAeA,SAAf","sourcesContent":["//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Lesson.css'\r\nimport React, { useState } from \"react\";\r\nimport { Container, Modal,Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectLessons } from \"../../state/lessonSlice\";\r\nimport { postLesson } from \"../../actions/lessonActions\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction NewLesson() {\r\n\r\n    // const [show, setShow] = useState(false);\r\n    // const handleShow = () => {\r\n    //   setShow(true); \r\n    // }\r\n    //const handleClose = () => setShow(false);\r\n\r\n  //const dispatch = useDispatch();\r\n  const lessons = useSelector(selectLessons);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [id, setID] = useState(\"\");\r\n\r\n//   const submitLesson= (e) => {\r\n//     e.preventDefault();\r\n//     if (title === \"\") return alert(\"title cannot be empty\");\r\n//     if (author === \"\") return alert(\"author cannot be empty\");\r\n//     if (text === \"\") return alert(\"text cannot be empty\");\r\n//     let lesson = lessons.find((e) => e.title === title);\r\n//     if (lesson) return alert(\"title already exists\");\r\n//     dispatch(\r\n//       postLesson({\r\n//         title: title,\r\n//         author: author,\r\n//         text: text,\r\n//         id: id,\r\n//       })\r\n//     );\r\n//   };\r\n\r\n  return (\r\n    <div className=\"lesson-sign-up\">\r\n      {/* <Modal show={show} onHide={handleClose}width=\"100rem\"> */}\r\nbbbbb\r\n      {/* <Form\r\n        onSubmit={(e) => {\r\n          submitLesson(e);\r\n        }}\r\n      >   <br/>  <br/>\r\n    Sign Up\r\n        <Form.Group className=\"mb-3\" >\r\n          <InputGroup>\r\n            <FormControl\r\n              className=\"title-input\"\r\n              placeholder=\"create title\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n                  <FormControl\r\n              className=\"id-input\"\r\n              id=\"inlineFormInputGroupUsername\"\r\n              placeholder=\"give id\"\r\n              value={id}\r\n              onChange={(e) => {\r\n                setID(e.target.value);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n     \r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control\r\n            className=\"author-input\"\r\n            placeholder=\"create password\"\r\n            value={author}\r\n            onChange={(e) => {\r\n              setAuthor(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Control\r\n            className=\"text-input\"\r\n            placeholder=\"enter content\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n   \r\n        <Button variant=\"green\" type=\"submit\"\r\n      \r\n        >\r\n          submit\r\n        </Button>\r\n      </Form>\r\n */}\r\n\r\n   {/* </Modal> <Button onClick={handleShow}>New Lesson</Button> */}\r\n\r\n  \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewLesson;\r\n"]},"metadata":{},"sourceType":"module"}