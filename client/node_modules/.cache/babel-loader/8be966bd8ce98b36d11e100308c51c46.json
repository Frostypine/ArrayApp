{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet resources = [];\nlet localResourceInfo = JSON.parse(localStorage.getItem(\"localResourceInfo\"));\n\nif (!localResourceInfo) {\n  localResourceInfo = {\n    loggedIn: false\n  };\n  localStorage.setItem(\"localResourceInfo\", JSON.stringify(localResourceInfo));\n}\n\nexport const resourceSlice = createSlice({\n  name: \"resources\",\n  initialState: {\n    resources,\n    localResourceInfo\n  },\n  reducers: {\n    allResources: (state, action) => {\n      state.resources = action.payload;\n      console.log(action.payload);\n    },\n    addResource: (state, action) => {\n      state.resources.push(action.payload);\n\n      if (action.payload.password === \"\") {\n        state.localResourceInfo = {\n          resource_id: action.payload._id,\n          loggedIn: false\n        };\n      }\n\n      if (action.payload.password !== \"\") {\n        state.localResourceInfo = {\n          resource_id: action.payload._id,\n          loggedIn: true\n        };\n      }\n\n      localStorage.setItem(\"localResourceInfo\", JSON.stringify(state.localResourceInfo));\n    },\n    editResource: (state, action) => {},\n    removeResource: (state, action) => {\n      state.resources.splice(state.resources.findIndex(e => e._id === action.payload, 1));\n      localStorage.setItem(\"resources\", JSON.stringify(state.resources));\n    },\n    editResourceText: (state, action) => {\n      const index = state.resources.findIndex(resource => resource._id === action.payload._id);\n      state.resources[index].text = action.payload.text;\n    }\n  }\n});\nexport const {\n  allResources,\n  addResource,\n  editResource,\n  removeResource,\n  editResourceText\n} = resourceSlice.actions;\nexport const selectResources = state => state.resources.resources;\nexport const selectLocalResourceInfo = state => state.resources.localResourceInfo;\nexport default resourceSlice.reducer;","map":{"version":3,"sources":["D:/Code/Git/Array/projects/arrayapp/client/src/state/resourceSlice.js"],"names":["createSlice","resources","localResourceInfo","JSON","parse","localStorage","getItem","loggedIn","setItem","stringify","resourceSlice","name","initialState","reducers","allResources","state","action","payload","console","log","addResource","push","password","resource_id","_id","editResource","removeResource","splice","findIndex","e","editResourceText","index","resource","text","actions","selectResources","selectLocalResourceInfo","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nlet resources = [];\r\n\r\nlet localResourceInfo = JSON.parse(localStorage.getItem(\"localResourceInfo\"));\r\n\r\nif (!localResourceInfo) {\r\n  localResourceInfo = {\r\n    loggedIn: false,\r\n  };\r\n  localStorage.setItem(\"localResourceInfo\", JSON.stringify(localResourceInfo));\r\n}\r\n\r\nexport const resourceSlice = createSlice({\r\n  name: \"resources\",\r\n  initialState: {\r\n    resources,\r\n    localResourceInfo,\r\n  },\r\n  reducers: {\r\n    allResources: (state, action) => {\r\n      state.resources = action.payload;\r\n      console.log(action.payload)\r\n    },\r\n    \r\n    addResource: (state, action) => {\r\n      state.resources.push(action.payload);\r\n      if (action.payload.password === \"\") {\r\n        state.localResourceInfo = { resource_id: action.payload._id, loggedIn: false };\r\n      }\r\n      if (action.payload.password !== \"\") {\r\n        state.localResourceInfo = {\r\n          resource_id: action.payload._id,\r\n          loggedIn: true,\r\n        };\r\n      }\r\n      localStorage.setItem(\r\n        \"localResourceInfo\",\r\n        JSON.stringify(state.localResourceInfo)\r\n      );\r\n    },\r\n    editResource: (state, action) => { },\r\n    removeResource: (state, action) => {\r\n      state.resources.splice(\r\n        state.resources.findIndex((e) => e._id === action.payload, 1)\r\n      );\r\n      localStorage.setItem(\"resources\", JSON.stringify(state.resources));\r\n    },\r\n   \r\n    editResourceText: (state, action) => {\r\n        const index = state.resources.findIndex(\r\n          (resource) => resource._id === action.payload._id\r\n        );\r\n        state.resources[index].text = action.payload.text;\r\n      },\r\n    },\r\n});\r\n\r\nexport const {\r\n  allResources,\r\n  addResource,\r\n  editResource,\r\n  removeResource,\r\n  editResourceText,\r\n\r\n} = resourceSlice.actions;\r\n\r\nexport const selectResources = (state) => state.resources.resources;\r\nexport const selectLocalResourceInfo = (state) => state.resources.localResourceInfo;\r\n\r\nexport default resourceSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}